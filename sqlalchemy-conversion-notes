When might we need an ORM session to exist?

1) During initialisation

2) During processing of keystrokes

That's about it!  Between keystrokes we don't maintain a session,
because it could be an arbitrary amount of time.  When timer events
are being processed we usually won't need a database session; we're
usually just updating the clock or checking for a window to timeout.
If we ever add any code that needs to access the database on a timer
or file event, it can do its own session management.

Most code will access the session as td.s which will either be None or
an active session object.

td.sm() will obtain a new session, for code that needs a longer-lived
session for whatever reason.

td.start_session() will change td.s from None to an active session
object, or raise an exception if td.s is not None

td.end_session() will change td.s from an active session (calling
close() on it) to None, or raise an exception if td.s is already None
